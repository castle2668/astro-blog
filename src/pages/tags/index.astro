---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import MainLayout from "../../layouts/MainLayout.astro";

const allBlogArticles: CollectionEntry<"blog">[] = await getCollection("blog");

const tagCounts: { [key: string]: number } = allBlogArticles
  .flatMap((article) => article.data.tags)
  .reduce((acc: { [key: string]: number }, tag: string) => {
    acc[tag] = (acc[tag] || 0) + 1;
    return acc;
  }, {});

const tags = Object.keys(tagCounts).sort();

const groupedTags = tags.reduce(
  (acc: { [key: string]: string[] }, tag: string) => {
    const firstLetter = tag[0].toUpperCase();
    if (!acc[firstLetter]) {
      acc[firstLetter] = [];
    }
    acc[firstLetter].push(tag);
    return acc;
  },
  {}
);
---

<MainLayout title="All Tags" url="/tags/">
  <h1 class="text-2xl mb-4">All Tags</h1>
  <p class="mb-4">目前總共有 {tags.length} 個標籤 `(๑•̀ω•́)ノ`</p>
  <div class="flex flex-col gap-4">
    {
      Object.keys(groupedTags)
        .sort()
        .map((letter) => (
          <div>
            <h2 class="text-xl mb-2">{letter}</h2>
            <div class="flex flex-wrap gap-4">
              {groupedTags[letter].map((tag) => (
                <a
                  href={`/tags/${tag}`}
                  class="block p-2 text-center rounded-lg bg-gray-100 hover:bg-gray-200 dark:bg-gray-600 dark:hover:bg-gray-500"
                >
                  {tag} ({tagCounts[tag]})
                </a>
              ))}
            </div>
          </div>
        ))
    }
  </div>
</MainLayout>
